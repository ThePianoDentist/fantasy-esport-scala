curl -v -H "Content-Type: application/json" -X POST -d '{"username": "Username1", "externalId": 3}' localhost/api/v1/users/
curl -v -H "Content-Type: application/json" -X POST -d '{"username": "Username2", "externalId": 4}' localhost/api/v1/users/

curl -v -H "Content-Type: application/json" -X POST -d '{"name": "TI99", "apiKey": "A", "tournamentId": 5401, "gameId": 1, "pickeeDescription": "Hero", "periodDescription": "day", "transferLimit": 5, "transferWildcard": true, "transferBlockedDuringPeriod": true, "pickees": [{"id": 1, "name": "dog", "value": 20.0, "factions": ["Support", "VP"]}, {"id": 2, "name": "Lich", "value": 10.1, "factions": ["Core", "EG"]}], "factions": [{"name": "role", "types": [{"name": "Support", "max": 2}, {"name": "Core", "max": 3}]}, {"name": "Team", "max": 2,"types": [{"name": "EG"}, {"name": "VP"}]}], "extraStats": ["wins", "picks", "bans"], "users": [1], "periods": [{"start": "2002-02-02 04:05", "end": "2002-02-02 04:05", "multiplier": 1}, {"start": "2002-02-02 04:05", "end": "2002-02-02 04:05", "multiplier": 1}, {"start": "2002-02-02 04:05", "end": "2002-02-02 04:05", "multiplier": 2}]}' localhost/api/v1/leagues

curl -v -H "Content-Type: application/json" -X POST -d '{"name": "TI100", "apiKey": "A", "tournamentId": 5402, "gameId": 1, "pickeeDescription": "Hero", "periodDescription": "day", "transferLimit": 5, "transferWildcard": true, "transferBlockedDuringPeriod": true, "pickees": [{"id": 1, "name": "dog", "value": 20.0, "factions": ["Support", "VP"]}, {"id": 2, "name": "Lich", "value": 10.1, "factions": ["Core", "EG"]}], "factions": [{"name": "role", "types": [{"name": "Support", "max": 2}, {"name": "Core", "max": 3}]}, {"name": "Team", "max": 2,"types": [{"name": "EG"}, {"name": "VP"}]}], "extraStats": ["wins", "picks", "bans"], "users": [1], "periods": [{"start": "2002-02-02 04:05", "end": "2002-02-02 04:05", "multiplier": 1}, {"start": "2002-02-02 04:05", "end": "2002-02-02 04:05", "multiplier": 1}, {"start": "2002-02-02 04:05", "end": "2002-02-02 04:05", "multiplier": 2}]}' localhost/api/v1/leagues

curl -X PUT localhost/api/v1/users/2/join/1

curl -H "Content-Type: application/json" -X PATCH -d '{"transferOpen": true}'  http://localhost/api/v1/leagues/1
curl -H "Content-Type: application/json" -X POST -d '{"buy": [1], "isCheck": false}'  http://localhost/api/v1/transfers/leagues/1/users/3

curl -H "Content-Type: application/json" -X POST -d '{"sell": [1], "buy": [2], "isCheck": false, "wildcard": true}'  http://localhost/api/v1/transfers/leagues/1/users/3

curl -H "Content-Type: application/json" -X POST -d '{"sell": [1], "isCheck": false}'  http://localhost/api/v1/transfers/leagues/1/users/3

curl -H "Content-Type: application/json" -X POST -d '{"buy": [1], "isCheck": false}'  http://localhost/api/v1/transfers/leagues/1/users/3
curl -H "Content-Type: application/json" -X POST -d '{"buy": [2], "isCheck": false}'  http://localhost/api/v1/transfers/leagues/1/users/4

curl -X POST -H "Content-Type: application/json" -d '{"matchId": 12, "tournamentId": 5401, "teamOne": "EG", "teamTwo": "VP", "teamOneVictory": false, "startTstamp": "2002-02-02 04:05:06.0", "pickees": [{"externalId": 1, "isTeamOne": true, "stats": [{"field": "points", "value": 4.0}, {"field": "picks", "value": 1}]}]}' localhost/api/v1/results/1

curl -X POST http://localhost/api/v1/leagues/1/startDay
curl -X POST -d '{}' http://localhost/api/v1/transfers/1/process

curl -X POST -H "Content-Type: application/json" -d '{"matchId": 12, "tournamentId": 5401, "teamOne": "EG", "teamTwo": "VP",                "teamOneVictory": true, "startTstamp": "2002-02-02 04:05:06.0", "pickees": [{"externalId": 2, "isTeamOne": true, "stats": [{"field":       "points", "value": 5.0}, {"field": "picks", "value": 2}, {"field": "wins", "value": 1}]}]}' localhost/api/v1/results/1

curl localhost/api/v1/leagues/1/rankings/points

curl -H "Content-Type: application/json" -X POST -d '{"pickees": [{"id": 1, "cost": 19.3}, {"id": 2, "cost": 9.9}]}' http://localhost/api/v1/pickees/league/1/updateCosts

curl -X POST http://localhost/api/v1/leagues/1/endDay


# stuff.......forUpdate on selects -> transfer stuff?  aTable.where(t => t.aField === aValue).forUpdate
# trailing slash empty req
# refactor into queries.scala. query-extractors.scala and the controller
# period constraints
# rankings without team is broken (too many rows)

# rollback on error
# unstring uuids
# improve order/sort by of rankings (secondaries)
# ----------------------------------- remove pickee field from pickee list
# custom exec contexts for all db repos
# wildcard used to wildcard available

# when specify points fnc. need diff points per stat for different factions
# revert match
# external_id to external_<what>_id




tstzrange. default tstzrange(now(), null)

create table scoring(scoring_id not null, stat_field_id not null, limit_id);

# error if no pickees in with match


# card carousel
# gold/silver/bronze backgrounds
# player images
# sort team by position
# remove confirm needed
# predictions page
# check buy pack decreases credits
# recycle card button
# leaderboard page
# some test matches
# bias packs to midfielders and defenders, not gkeepers
# check the combination faction stuff when preventing dupes


------- next weeks fixtures
------- this weeks fixtures (with result)



DOTA:
# do average points per period
# check open dota api call has fantasy points breakdown
# be able to pick team for any period not just next
# rework transfers so isnt hacked about targetting transfer at period start



ROLLBACK buy card if fail   ...........DONE
negative points multipliers make worse  ............. corrected
period should default to next week for predicts   ..............done
sort out infinity fields in league info
am i using scoring for diff positions correctly ..............YYYYYYYYESSS


proper test run
goalkeeper/forward ratios !!!!!!!!!!!!!!!!!!!!!!!!!!
collection page  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
filter by team   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
responsive
fotmob chrome extension to get data  !!!!!!!!!!!!!!!!!!!
predictions series/match            !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
handle finalized column...maybe delete, maybe existence of score means finalised?    !!!!!!!!!!!!!!!!!!!!!!!!!1
more lightweight get league     !!!!!!!!!!!!!!!!!!!!!
indexing             !!!!!!!!!!!!!!!!!!!!!!!!
grey out too late predictions
pretty predictions     !!!!!!!!!!!!!!!!!!!!!!!
predictions dropdown  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
facebook social auth  !!!!!!!!!!!!!!!!!!!!!!???????????????
add cards to card tabs without page reload  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
relayout league table to separate card stuff out !!!!!!!!!!!!!!!!!!!!!!!!!
x0.6000000000000001 !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
prediction_win_money  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
check groupbyorderereds
for dota, average points over day, not sum
sort of show team on leaderboards
return stats of cards ....stats can be list of last X periods?  !!!!!!!!!!!!!!!!!!!!

is matchfinalscore broken?
alter table prediction_series add unique (series_id, user_id);
create index prediction_series_paid_out_idx on prediction_series(paid_out);
create table prediction_series(series_id bigint references series) inherits(prediction2);
create table prediction2(prediction_id bigserial primary key, user_id bigint references useru, team_one_score integer not null, team_two_score integer not null, paid_out boolean default false);
alter table league alter column tournament_id drop not null;

so all games of a series go into same period

-- no popup when make transfer, turn button into a tick
-- wildcard when group stage ends